{"version":3,"sources":["assets/icon-calendar.js","pages/expenses/ExpenseItem.js","pages/expenses/FiltersComponent.js","pages/expenses/ExpensesComponent.js","logic/useSheetChangesSubscription.js"],"names":["props","viewBox","fill","xmlns","opacity","d","styles","StyleSheet","create","amount","whiteSpace","fontSize","lineHeight","fontWeight","category","container","backgroundColor","border","borderRadius","color","marginBottom","minHeight","padding","currency","marginLeft","editButton","cursor","textAlign","lastColumn","maxWidth","minWidth","flexDirection","justifyContent","marginTop","width","method","tag","marginRight","ExpenseItem","forwardRef","ref","expense","tags","onEditClick","className","css","componentRef","horizontal","breakpoints","654","flexGrow","vertical","style","744","488","360","nowrap","numberFormat","moment","date","format","city","340","description","onClick","id","wrap","length","split","map","t","i","key","trim","closeButton","right","top","title","margin","subTitle","inputGroupRow","FiltersComponent","filters","onApply","onClose","match","useReactRouter","useAsync","promiseFn","firebaseClient","getMetadata","sheetId","params","metadata","data","loading","isPending","useState","amountFrom","amountTo","categories","mapArrayToTags","cities","currencies","methods","dateFrom","Date","dateTo","currentFilters","setCurrentFilters","extractTagsFromMetadata","onValueChange","type","value","prev","newFilters","renderTagFilter","suggestions","noStyles","onAddition","array","find","push","onTagAdd","onDelete","index","splice","onTagDelete","placeholder","fullScreen","startOpen","name","selected","onChange","e","target","label","c","getTime","hasFilters","Object","keys","some","f","toString","buttonsContainer","link","textDecoration","statisticsGlobal","sideColumnsLeft","sideColumnsRight","paddingTop","paddingLeft","flexWrap","showFiltersButton","ExpensesComponent","history","expenses","setExpenses","statistics","setStatistics","setTags","setLoading","sheetName","setSheetName","useEffect","expensesRef","metadataRef","isInitialFetch","_rawData","_metadata","getSheetFetch","a","getSheet","getSheetResponse","getExpensesRef","getMetadataRef","on","childSnapshot","val","formatted","sortExpensesByDate","dataIndex","findIndex","newRawData","off","useSheetChangesSubscription","expensesFiltered","setExpensesFiltered","expensesPaginated","setExpensesPaginated","showFilters","setShowFilters","filtered","applyFilters","window","scrollTo","onExpenseClick","expenseId","periods","getPeriods","pageCount","1080","alignItems","768","totalDays","daysDiff","lastUpdate","minDate","Math","round","average","getAverageLabel","onPageChange","hideForecast","calculateStatistics","slice","reverse","p","showBorders","isOpen","onRequestClose","content","left","bottom","transform","zIndex","overlay","ariaHideApp","whyDidYouRender"],"mappings":"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","file":"static/js/10.8a8df875.chunk.js","sourcesContent":["import React from 'react';\n\nexport default (props) => (\n    <svg viewBox=\"2 2 18 18\" {...props} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill={props.fill || \"#000000\"} opacity={props.opacity || ''} d=\"M 6 3 C 6 3 5 2.99997 5 4 L 3 4 L 3 7 L 3 18 L 3 19 L 19 19 L 19 18 L 19 7 L 19 4 L 17 4 C 17 2.99997 16 3 16 3 L 13 3 C 13 3 12 2.99997 12 4 L 10 4 C 10 2.99997 9 3 9 3 L 6 3 z M 6 4 L 9 4 L 9 5 L 6 5 L 6 4 z M 13 4 L 16 4 L 16 5 L 13 5 L 13 4 z M 4 7 L 18 7 L 18 18 L 4 18 L 4 7 z M 6 8 L 6 10 L 8 10 L 8 8 L 6 8 z M 10 8 L 10 10 L 12 10 L 12 8 L 10 8 z M 14 8 L 14 10 L 16 10 L 16 8 L 14 8 z M 6 11 L 6 13 L 8 13 L 8 11 L 6 11 z M 10 11 L 10 13 L 12 13 L 12 11 L 10 11 z M 14 11 L 14 13 L 16 13 L 16 11 L 14 11 z M 14 14 L 14 16 L 16 16 L 16 14 L 14 14 z \"></path>\n    </svg>\n);\n","import React, { forwardRef } from 'react';\nimport { StyleSheet, css } from 'aphrodite';\nimport { Column, Row } from 'simple-flexbox';\nimport moment from 'moment';\nimport { numberFormat } from '../../logic/utilities';\nimport IconCalendar from '../../assets/icon-calendar';\nimport IconLocation from '../../assets/icon-location';\n\nconst styles = StyleSheet.create({\n    amount: {\n        whiteSpace: 'nowrap',\n        fontSize: 27,\n        lineHeight: '27px',\n        fontWeight: 600\n    },\n    category: {\n        fontSize: 20,\n        fontWeight: 600,\n        lineHeight: '21px',\n        whiteSpace: 'nowrap'\n    },\n    container: {\n        backgroundColor: '#FDFDFD',\n        border: '1px solid #E7EBF0',\n        borderRadius: 4,\n        color: '#172b4d',\n        marginBottom: 10,\n        minHeight: 80,\n        padding: '10px 20px',\n        '@media (max-width: 488px)': {\n            padding: '5px 10px'\n        },\n        ':last-child': {\n            marginBottom: 0\n        }\n    },\n    currency: {\n        fontSize: 10,\n        marginBottom: 2,\n        marginLeft: 2\n    },\n    editButton: {\n        backgroundColor: '#FFFFFF',\n        border: '1px solid rgb(35, 112, 163)',\n        borderRadius: 5,\n        color: 'rgb(35, 112, 163)',\n        cursor: 'pointer',\n        fontWeight: 500,\n        padding: '2px 8px',\n        textAlign: 'center',\n        ':hover': {\n            backgroundColor: '#FCFCFC'\n        }\n    },\n    lastColumn: {\n        maxWidth: 300,\n        minWidth: 10,\n        '@media (max-width: 654px)': {\n            flexDirection: 'row-reverse',\n            justifyContent: 'space-between',\n            marginTop: 10,\n            width: '100%',\n            maxWidth: 'none'\n        }\n    },\n    method: {\n        fontSize: 18,\n        marginTop: 10\n    },\n    tag: {\n        borderRadius: 5,\n        fontWeight: 600,\n        padding: '8px 8px',\n        textAlign: 'center',\n        marginTop: 4,\n        marginRight: 4\n    }\n});\n\nconst ExpenseItem = forwardRef(({ expense, tags, onEditClick }, ref) => {\n    return (\n        <Column className={css(styles.container)} componentRef={ref}>\n            <Row horizontal=\"spaced\" breakpoints={{ 654: 'column' }}>\n                <Row flexGrow={3}>\n                    <Column\n                        flexGrow={1}\n                        vertical=\"spaced\"\n                        style={{ maxWidth: 300, minWidth: 300 }}\n                        breakpoints={{\n                            744: { minWidth: 200 },\n                            488: { minWidth: 150, maxWidth: 150 },\n                            360: { minWidth: 120, maxWidth: 120 }\n                        }}\n                    >\n                        <Row nowrap={'true'} vertical=\"end\">\n                            <Row className={css(styles.amount)}>\n                                $ {numberFormat(expense.amount, 0)}\n                            </Row>\n                            <span className={css(styles.currency)}>\n                                / {expense.currency}\n                            </span>\n                        </Row>\n                        <Row\n                            style={{ marginTop: 10 }}\n                            nowrap={'true'}\n                            vertical=\"center\"\n                        >\n                            <IconCalendar width={22} />\n                            <span style={{ marginLeft: 4 }}>\n                                {moment(+expense.date).format('DD/MM/YYYY')}\n                            </span>\n                        </Row>\n                        <Row\n                            style={{ marginTop: 10 }}\n                            nowrap={'true'}\n                            vertical=\"center\"\n                        >\n                            <IconLocation width={22} />\n                            <span style={{ marginLeft: 4 }}>\n                                {expense.city}\n                            </span>\n                        </Row>\n                    </Column>\n                    <Column\n                        flexGrow={1}\n                        vertical=\"spaced\"\n                        breakpoints={{\n                            744: { minWidth: 200 },\n                            488: { marginTop: 10, minWidth: 0 },\n                            340: { marginLeft: 4 }\n                        }}\n                    >\n                        <Column>\n                            <span className={css(styles.category)}>\n                                {expense.category}\n                            </span>\n                            <span style={{ marginTop: 4, fontSize: 12 }}>\n                                {expense.description}\n                            </span>\n                        </Column>\n                        <span className={css(styles.method)}>\n                            {expense.method}\n                        </span>\n                    </Column>\n                </Row>\n                <Column\n                    className={css(styles.lastColumn)}\n                    flexGrow={1}\n                    horizontal=\"end\"\n                    vertical=\"spaced\"\n                >\n                    <span\n                        onClick={() => onEditClick(expense.id)}\n                        className={css(styles.editButton)}\n                    >\n                        EDIT\n                    </span>\n                    <Row\n                        wrap\n                        horizontal=\"end\"\n                        breakpoints={{\n                            654: { justifyContent: 'flex-start' }\n                        }}\n                    >\n                        {expense.tags &&\n                            expense.tags.length > 0 &&\n                            expense.tags.split(',').map((t, i) => (\n                                <span\n                                    key={`${i}-${t}`}\n                                    className={css(styles.tag)}\n                                    style={{\n                                        backgroundColor:\n                                            (tags[t] &&\n                                                tags[t].backgroundColor) ||\n                                            '#38bcfb',\n                                        color:\n                                            (tags[t] && tags[t].color) ||\n                                            'white'\n                                    }}\n                                >\n                                    {t.trim()}\n                                </span>\n                            ))}\n                    </Row>\n                </Column>\n            </Row>\n        </Column>\n    );\n});\n\nexport default ExpenseItem;\n","import React, { useState } from 'react';\nimport { StyleSheet, css } from 'aphrodite';\nimport { Column, Row } from 'simple-flexbox';\nimport { useAsync } from 'react-async';\nimport useReactRouter from 'use-react-router';\nimport firebaseClient from '../../logic/firebaseClient';\nimport {\n    ButtonComponent,\n    DatePickerComponent,\n    InputComponent,\n    LoadingComponent,\n    TagsComponent\n} from '../../components';\nimport { extractTagsFromMetadata, mapArrayToTags } from '../../logic/utilities';\n\nconst styles = StyleSheet.create({\n    closeButton: {\n        border: '1px dashed',\n        cursor: 'pointer',\n        lineHeight: '20px',\n        padding: '5px 8px',\n        right: 5,\n        top: 5,\n        ':hover': {\n            backgroundColor: 'rgba(0,0,0,.05)'\n        }\n    },\n    container: {\n        backgroundColor: 'white',\n        maxWidth: 548,\n        minWidth: '30vw',\n        width: '100%',\n        '@media (max-width: 1068px)': {\n            minWidth: 600\n        },\n        '@media (max-width: 768px)': {\n            minWidth: '80vw'\n        }\n    },\n    title: {\n        margin: 0\n    },\n    subTitle: {\n        margin: '10px 0px 2px 0px',\n        fontSize: 16\n    },\n    inputGroupRow: {\n        width: '50%',\n        ':last-child': {\n            marginLeft: 8\n        },\n        '@media (max-width: 768px)': {\n            marginLeft: 0,\n            width: '100%'\n        }\n    }\n});\n\nfunction FiltersComponent({ filters = {}, onApply, onClose }) {\n    const { match } = useReactRouter();\n    const { data: metadata, isPending: loading } = useAsync({\n        promiseFn: firebaseClient.getMetadata,\n        sheetId: match.params.sheetId\n    });\n    const [currentFilters, setCurrentFilters] = useState({\n        amountFrom: filters.amountFrom || '',\n        amountTo: filters.amountTo || '',\n        categories: mapArrayToTags(filters.categories),\n        cities: mapArrayToTags(filters.cities),\n        currencies: mapArrayToTags(filters.currencies),\n        methods: mapArrayToTags(filters.methods),\n        tags: mapArrayToTags(filters.tags),\n        dateFrom: filters.dateFrom && new Date(filters.dateFrom),\n        dateTo: filters.dateTo && new Date(filters.dateTo)\n    });\n\n    const {\n        categories,\n        cities,\n        currencies,\n        methods,\n        tags\n    } = extractTagsFromMetadata(metadata);\n\n    const onApplyFilters = () => {\n        const newFilters = {\n            ...currentFilters,\n            categories: currentFilters.categories.map(c => c.name),\n            cities: currentFilters.cities.map(c => c.name),\n            currencies: currentFilters.currencies.map(c => c.name),\n            methods: currentFilters.methods.map(c => c.name),\n            tags: currentFilters.tags.map(c => c.name),\n            dateFrom:\n                currentFilters.dateFrom && currentFilters.dateFrom.getTime(),\n            dateTo: currentFilters.dateTo && currentFilters.dateTo.getTime()\n        };\n        const hasFilters = Object.keys(newFilters).some(\n            f => !!newFilters[f] && newFilters[f].toString().length > 0\n        );\n        onApply(hasFilters ? newFilters : {});\n    };\n\n    const onValueChange = (type, value) =>\n        setCurrentFilters(prev => {\n            const newFilters = { ...prev };\n            newFilters[type] = value;\n            return newFilters;\n        });\n\n    const onTagAdd = (type, tag) =>\n        setCurrentFilters(prev => {\n            const array = [...prev[type]];\n            if (array.find(i => i.id === tag.id)) {\n                return prev;\n            }\n            array.push(tag);\n            const newFilters = { ...prev };\n            newFilters[type] = array;\n            return newFilters;\n        });\n\n    const onTagDelete = (type, index) =>\n        setCurrentFilters(prev => {\n            const array = [...prev[type]];\n            array.splice(index, 1);\n            const newFilters = { ...prev };\n            newFilters[type] = array;\n            return newFilters;\n        });\n\n    const renderTagFilter = ({ title, type, suggestions, noStyles }) => (\n        <Column flexGrow={1} className={!noStyles && css(styles.inputGroupRow)}>\n            <h3 className={css(styles.subTitle)}>{title}:</h3>\n            <TagsComponent\n                onAddition={tag => onTagAdd(type, tag)}\n                onDelete={index => onTagDelete(type, index)}\n                suggestions={suggestions}\n                placeholder={`Select ${title}`}\n                tags={currentFilters[type]}\n            />\n        </Column>\n    );\n\n    return (\n        <LoadingComponent loading={loading} fullScreen>\n            <Column className={css(styles.container)}>\n                <Row horizontal=\"spaced\">\n                    <h1 className={css(styles.title)}>Filters</h1>\n                    <div>\n                        <span\n                            className={css(styles.closeButton)}\n                            onClick={onClose}\n                        >\n                            &#10005;\n                        </span>\n                    </div>\n                </Row>\n\n                <Row>\n                    {renderTagFilter({\n                        title: 'Categories',\n                        type: 'categories',\n                        suggestions: categories,\n                        noStyles: true\n                    })}\n                </Row>\n\n                <Row>\n                    {renderTagFilter({\n                        title: 'Cities',\n                        type: 'cities',\n                        suggestions: cities\n                    })}\n                    {renderTagFilter({\n                        title: 'Currencies',\n                        type: 'currencies',\n                        suggestions: currencies\n                    })}\n                </Row>\n                <Row>\n                    {renderTagFilter({\n                        title: 'Methods',\n                        type: 'methods',\n                        suggestions: methods\n                    })}\n\n                    {renderTagFilter({\n                        title: 'Tags',\n                        type: 'tags',\n                        suggestions: tags\n                    })}\n                </Row>\n\n                <Column>\n                    <Row horizontal=\"spaced\">\n                        <Column\n                            flexGrow={1}\n                            className={css(styles.inputGroupRow)}\n                        >\n                            <h3 className={css(styles.subTitle)}>Date From:</h3>\n                            <DatePickerComponent\n                                startOpen={false}\n                                name=\"date-from\"\n                                selected={\n                                    currentFilters.dateFrom\n                                        ? new Date(currentFilters.dateFrom)\n                                        : null\n                                }\n                                onChange={date =>\n                                    onValueChange('dateFrom', date)\n                                }\n                                value={\n                                    currentFilters.dateFrom\n                                        ? new Date(currentFilters.dateFrom)\n                                        : null\n                                }\n                            />\n                        </Column>\n                        <Column\n                            flexGrow={1}\n                            className={css(styles.inputGroupRow)}\n                        >\n                            <h3 className={css(styles.subTitle)}>Date To:</h3>\n                            <DatePickerComponent\n                                startOpen={false}\n                                name=\"date-to\"\n                                selected={\n                                    currentFilters.dateTo\n                                        ? new Date(currentFilters.dateTo)\n                                        : null\n                                }\n                                onChange={date => onValueChange('dateTo', date)}\n                                value={\n                                    currentFilters.dateTo\n                                        ? new Date(currentFilters.dateTo)\n                                        : null\n                                }\n                            />\n                        </Column>\n                    </Row>\n                </Column>\n\n                <Column>\n                    <Row horizontal=\"spaced\">\n                        <Column\n                            flexGrow={1}\n                            className={css(styles.inputGroupRow)}\n                        >\n                            <h3 className={css(styles.subTitle)}>\n                                Amount From:\n                            </h3>\n                            <InputComponent\n                                value={currentFilters.amountFrom}\n                                onChange={e =>\n                                    onValueChange('amountFrom', e.target.value)\n                                }\n                            />\n                        </Column>\n                        <Column\n                            flexGrow={1}\n                            className={css(styles.inputGroupRow)}\n                        >\n                            <h3 className={css(styles.subTitle)}>Amount To:</h3>\n                            <InputComponent\n                                value={currentFilters.amountTo}\n                                onChange={e =>\n                                    onValueChange('amountTo', e.target.value)\n                                }\n                            />\n                        </Column>\n                    </Row>\n                </Column>\n\n                <Row flexGrow={1} style={{ marginTop: 20 }} horizontal=\"spaced\">\n                    <ButtonComponent\n                        color=\"red\"\n                        label=\"Cancel\"\n                        onClick={onClose}\n                    />\n\n                    <ButtonComponent\n                        color=\"green\"\n                        label=\"Apply Filters\"\n                        onClick={onApplyFilters}\n                    />\n                </Row>\n            </Column>\n        </LoadingComponent>\n    );\n}\n\nexport default FiltersComponent;\n","import React, { useEffect, useState } from 'react';\nimport { StyleSheet, css } from 'aphrodite';\nimport useReactRouter from 'use-react-router';\nimport { Column, Row } from 'simple-flexbox';\nimport FlipMove from 'react-flip-move';\nimport Modal from 'react-modal';\nimport { useSheetChangesSubscription } from '../../logic/useSheetChangesSubscription';\nimport {\n    applyFilters,\n    calculateStatistics,\n    daysDiff,\n    getPeriods,\n    numberFormat\n} from '../../logic/utilities';\nimport {\n    ButtonComponent,\n    LoadingComponent,\n    PaginationComponent,\n    StatisticsByCategoryWidget,\n    StatisticsWidget\n} from '../../components';\nimport ExpenseItem from './ExpenseItem';\nimport FiltersComponent from './FiltersComponent';\n\nconst styles = StyleSheet.create({\n    buttonsContainer: {\n        marginTop: 10,\n        marginBottom: 10\n    },\n    link: {\n        color: '#2c689c',\n        cursor: 'pointer',\n        fontSize: 14,\n        textDecoration: 'underline'\n    },\n    statisticsGlobal: {\n        border: '1px solid #fa7159',\n        borderRadius: 5,\n        fontWeight: 600,\n        padding: '8px 10px',\n        textAlign: 'center'\n    },\n    sideColumnsLeft: {\n        flexGrow: 1,\n        width: '100%',\n        maxWidth: 240,\n        minWidth: 80,\n        '@media (max-width: 1080px)': {\n            maxWidth: 880\n        }\n    },\n    sideColumnsRight: {\n        flexGrow: 1,\n        width: '100%',\n        maxWidth: 240,\n        minWidth: 220,\n        paddingTop: 56,\n        paddingLeft: 10,\n        '@media (max-width: 1080px)': {\n            padding: 0,\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            maxWidth: 880,\n            marginTop: 20\n        }\n    },\n    showFiltersButton: {\n        margin: '0px 8px',\n        '@media (max-width: 768px)': {\n            marginTop: 10,\n            marginLeft: 0\n        }\n    }\n});\n\nfunction ExpensesComponent() {\n    const { history, match } = useReactRouter();\n    const { expenses, loading, statistics, tags } = useSheetChangesSubscription(\n        match.params.sheetId\n    );\n    const [expensesFiltered, setExpensesFiltered] = useState([]);\n    const [expensesPaginated, setExpensesPaginated] = useState([]);\n    const [showFilters, setShowFilters] = useState(false);\n    const [currentFilters, setCurrentFilters] = useState({});\n\n    useEffect(() => {\n        const filtered = applyFilters([...expenses], currentFilters);\n        setExpensesFiltered(filtered);\n        setExpensesPaginated([...filtered].splice(0, 10));\n    }, [expenses, currentFilters]);\n\n    useEffect(() => window.scrollTo(0, 0), []);\n\n    const onAddSheetClick = () =>\n        history.push(`/sheet/${match.params.sheetId}/new`);\n\n    const onExpenseClick = expenseId =>\n        history.push(`/sheet/${match.params.sheetId}/edit/${expenseId}`);\n\n    const handlePageClick = ({ selected }) => {\n        setExpensesPaginated([...expensesFiltered].splice(selected * 10, 10));\n    };\n\n    const getAverageLabel = () => {\n        if (!statistics) {\n            return '';\n        }\n        const totalDays = daysDiff(statistics.lastUpdate, statistics.minDate);\n\n        return `Overall Average: $${numberFormat(\n            Math.round(statistics.average || 0),\n            0\n        )} / day. ${totalDays} days.`;\n    };\n\n    const periods = getPeriods(statistics);\n    const hasFilters = Object.keys(currentFilters).length > 0;\n    const pageCount = expensesFiltered.length / 10;\n\n    return (\n        <LoadingComponent loading={loading} fullScreen>\n            <Column horizontal=\"center\">\n                <Row\n                    style={{ width: '100%' }}\n                    horizontal=\"spaced\"\n                    breakpoints={{\n                        1080: { flexDirection: 'column', alignItems: 'center' } // prettier-ignore\n                    }}\n                >\n                    <span className={css(styles.sideColumnsLeft)}></span>\n\n                    <Column\n                        style={{ maxWidth: 880, width: '100%' }}\n                        breakpoints={{ 1080: { padding: '0px 10px', maxWidth: 880 } }} // prettier-ignore\n                    >\n                        <Row\n                            className={css(styles.buttonsContainer)}\n                            vertical=\"center\"\n                            horizontal=\"spaced\"\n                            breakpoints={{\n                                768: { flexDirection: 'column', alignItems: 'flex-start' } // prettier-ignore\n                            }}\n                        >\n                            <ButtonComponent\n                                color=\"green\"\n                                label=\"Add Expense\"\n                                onClick={onAddSheetClick}\n                            />\n                            <Row\n                                breakpoints={{\n                                    768: { flexDirection: 'column', alignItems: 'flex-start' } // prettier-ignore\n                                }}\n                            >\n                                <Row\n                                    vertical=\"end\"\n                                    breakpoints={{ 768: { flexDirection: 'row-reverse' } }} // prettier-ignore\n                                >\n                                    {hasFilters && (\n                                        <span\n                                            className={css(styles.link)}\n                                            onClick={() => setCurrentFilters({})} // prettier-ignore\n                                        >\n                                            clear filters\n                                        </span>\n                                    )}\n                                    <ButtonComponent\n                                        className={css(\n                                            styles.showFiltersButton\n                                        )}\n                                        color=\"blue\"\n                                        label=\"Filters\"\n                                        onClick={() => setShowFilters(true)}\n                                    />\n                                </Row>\n                                {!hasFilters && (\n                                    <Row\n                                        className={css(styles.statisticsGlobal)}\n                                        breakpoints={{ 768: { marginTop: 10 } }}\n                                    >\n                                        {getAverageLabel()}\n                                    </Row>\n                                )}\n                            </Row>\n                        </Row>\n\n                        <FlipMove>\n                            {(expensesPaginated || []).map(e => (\n                                <ExpenseItem\n                                    key={e.id}\n                                    expense={e}\n                                    onEditClick={onExpenseClick}\n                                    tags={tags || []}\n                                />\n                            ))}\n                        </FlipMove>\n\n                        <PaginationComponent\n                            pageCount={pageCount}\n                            onPageChange={handlePageClick}\n                        />\n                    </Column>\n                    <Column className={css(styles.sideColumnsRight)}>\n                        {hasFilters && (\n                            <StatisticsWidget\n                                hideForecast\n                                statistics={calculateStatistics(\n                                    expensesFiltered\n                                )}\n                                index={3}\n                            />\n                        )}\n                        {periods\n                            .slice(0)\n                            .reverse()\n                            .map((p, index) => {\n                                return (\n                                    <StatisticsWidget\n                                        key={`statistics-${index}`}\n                                        statistics={p}\n                                        index={index}\n                                    />\n                                );\n                            })}\n                        {statistics.categories && (\n                            <StatisticsByCategoryWidget\n                                categories={statistics.categories}\n                                showBorders\n                            />\n                        )}\n                    </Column>\n                </Row>\n            </Column>\n            <Modal\n                isOpen={showFilters}\n                onRequestClose={() => setShowFilters(false)}\n                style={{\n                    content: {\n                        border: '1px solid #2c689c',\n                        borderRadius: 4,\n                        top: '50%',\n                        left: '50%',\n                        right: 'auto',\n                        bottom: 'auto',\n                        marginRight: '-50%',\n                        transform: 'translate(-50%, -50%)',\n                        padding: 20,\n                        zIndex: 1102\n                    },\n                    overlay: {\n                        backgroundColor: 'rgba(10, 10, 10, .3)',\n                        zIndex: 1101\n                    }\n                }}\n                ariaHideApp={false}\n            >\n                <FiltersComponent\n                    filters={currentFilters}\n                    onApply={filters => {\n                        setCurrentFilters(filters);\n                        setShowFilters(false);\n                    }}\n                    onClose={() => setShowFilters(false)}\n                />\n            </Modal>\n        </LoadingComponent>\n    );\n}\n\nExpensesComponent.whyDidYouRender = false;\n\nexport default ExpensesComponent;\n","import { useState, useEffect } from 'react';\nimport firebaseClient from './firebaseClient';\nimport { sortExpensesByDate } from './utilities';\n\nexport function useSheetChangesSubscription(sheetId) {\n    const [expenses, setExpenses] = useState([]);\n    const [statistics, setStatistics] = useState({});\n    const [tags, setTags] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [sheetName, setSheetName] = useState('');\n\n    useEffect(() => {\n        let expensesRef;\n        let metadataRef;\n\n        let isInitialFetch = true;\n        let _rawData = [];\n        let _metadata = {};\n\n        const getSheetFetch = async sheetId => {\n            const getSheetResponse = await firebaseClient.getSheet({ sheetId });\n            setExpenses(getSheetResponse.expenses);\n            setSheetName(getSheetResponse.sheetName);\n            setStatistics(getSheetResponse.metadata.statistics);\n            setTags(getSheetResponse.metadata.tags);\n            _rawData = getSheetResponse.expenses;\n            _metadata = getSheetResponse.metadata;\n            isInitialFetch = false;\n            setLoading(false);\n        };\n        if (sheetId) {\n            expensesRef = firebaseClient.getExpensesRef({ sheetId });\n            metadataRef = firebaseClient.getMetadataRef({ sheetId });\n            expensesRef.on('child_added', childSnapshot => {\n                if (isInitialFetch) {\n                    return;\n                }\n                const array = [..._rawData, childSnapshot.val()];\n                _rawData = [...array];\n                const formatted = sortExpensesByDate(array);\n                setExpenses(formatted);\n            });\n\n            expensesRef.on('child_changed', childSnapshot => {\n                if (isInitialFetch) {\n                    return;\n                }\n\n                const dataIndex = _rawData.findIndex(\n                    d => d.id === childSnapshot.key\n                );\n                const newRawData = [..._rawData];\n                newRawData[dataIndex] = childSnapshot.val();\n                _rawData = [...newRawData];\n                const formatted = sortExpensesByDate(newRawData);\n                setExpenses(formatted);\n            });\n\n            expensesRef.on('child_removed', childSnapshot => {\n                if (isInitialFetch) {\n                    return;\n                }\n                const dataIndex = _rawData.findIndex(\n                    d => d.id === childSnapshot.key\n                );\n                const newRawData = [..._rawData];\n                newRawData.splice(dataIndex, 1);\n                const formatted = sortExpensesByDate(newRawData);\n                setExpenses(formatted);\n            });\n\n            metadataRef.on('child_added', childSnapshot => {\n                if (isInitialFetch) {\n                    return;\n                }\n                _metadata[childSnapshot.key] = childSnapshot.val();\n                setStatistics(_metadata.statistics);\n                setTags(_metadata.tags);\n            });\n\n            metadataRef.on('child_changed', childSnapshot => {\n                if (isInitialFetch) {\n                    return;\n                }\n                _metadata[childSnapshot.key] = childSnapshot.val();\n                setStatistics(_metadata.statistics);\n                setTags(_metadata.tags);\n            });\n\n            metadataRef.on('child_removed', childSnapshot => {\n                if (isInitialFetch) {\n                    return;\n                }\n                delete _metadata[childSnapshot.key];\n                setStatistics(_metadata.statistics);\n                setTags(_metadata.tags);\n            });\n\n            getSheetFetch(sheetId);\n        }\n\n        return () => {\n            if (expensesRef) {\n                expensesRef.off();\n            }\n            if (metadataRef) {\n                metadataRef.off();\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sheetId]);\n\n    return {\n        expenses,\n        loading,\n        sheetName,\n        statistics,\n        tags\n    };\n}\n"],"sourceRoot":""}